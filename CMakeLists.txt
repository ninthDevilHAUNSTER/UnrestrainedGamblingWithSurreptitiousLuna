cmake_minimum_required(VERSION 3.5)
project(UnrestrainedGamblingWithSurreptitiousLuna)

set(CMAKE_CXX_STANDARD 14)

add_executable(UnrestrainedGamblingWithSurreptitiousLuna
        main.cpp
        AlgNote/AlgNoteMainHeader.h
        PAT/PATMainHeader.h
        AlgNote/NullptrLearning.cpp
        #        PAT/emergency.cpp
        #        AlgNote/shortest_path_adj.cpp
        #        AlgNote/STL_usage.cpp
        #        AlgNote/shortest_path_matrix.cpp
        #        "PAT/Travel Plan DJ.cpp"
        #        "PAT/Travel Plan DFS_DF.cpp"
        #        "PAT/Public Bike Management.cpp"
        #                "PAT/gas station.cpp"
        #        "PAT/All Road Lead to Rome D DFSj.cpp"
        #        "PAT/Shuffling Machine.cpp"
        #        "PAT/A1026 Shortest Distance.cpp"
        #        "PAT/A1065 A+B and C (64bit).cpp"
        #        "PAT/A1002 A+B for Polynomials.cpp"
        #        "PAT/A1009 Product of Polynomials.cpp"
        #        "PAT/A1011 World Cup Betting.cpp"
        #        "PAT/A1006 Sign In and Sign Out.cpp"
        #        "PAT/A1036 Boys vs Girls .cpp"
        #        "PAT/A1031 Hello World for U.cpp"
        #        "PAT/A1019 General Palindromic Number.cpp"
        #        "PAT/A1027 Colors in Mars.cpp"
        #        "PAT/A1058 A+B in Hogwarts.cpp"
        #        "PAT/A1061 Dating.cpp"
        #        "PAT/A1073 Scientific Notation.cpp"
        #        "PAT/A1005 Spell It Right.cpp"
        #        "PAT/A1035 Password.cpp"
        #        "PAT/A1077 Kuchiguse.cpp"
        #        "PAT/A1082 Read Number in Chinese.cpp" #这道题我写的心态崩了...
        #        "PAT/A1062 Talent and Virtue.cpp"
        #        "PAT/A1012 The Best Rank.cpp" # 该题不是最优的解法，应该把rank放到新开的10**6大小的数组里面，可以减少查询的时间复杂度
        #                "PAT/A1016 Phone Bills.cpp"
        # ↑↑↑↑↑↑↑↑↑↑有个样例死活过不去啊。哭了，我做了一个多快两个消失了。
        #        "PAT/A1025 PAT Ranking.cpp"
        #        "PAT/A1028 List Sorting.cpp"
        #        "PAT/A1055 The World's Richest.cpp"
        #        "PAT/A1075 PAT Judge.cpp"
        #        "PAT/A1083 List Grades.cpp"
        #        "PAT/A1080 Graduate Admission.cpp"
        # ↑↑↑↑↑↑↑↑↑↑两个样例过不去...
        #        "PAT/A1095 Cars on Campus.cpp"
        #        "PAT/A1084 Broken Keyboard.cpp"
        #        "PAT/A1092 To Buy or Not to Buy.cpp"
        #        "PAT/A1041 Be Unique.cpp"
        #        "PAT/A1050 String Subtraction.cpp"
        #        "PAT/A1048 Find Coins.cpp"
        #        "PAT/A1070 Mooncake.cpp"
        #        "PAT/A1033 To Fill or Not to Fill.cpp"
        #        "PAT/A1067 Sort with Swap(0, i).cpp"
        #        "PAT/A1038 Recover the Smallest Number.cpp"
        #        "PAT/A1085 Perfect Sequence.cpp"
        #        "PAT/A1010 Radix.cpp"
        #        "PAT/A1044 Shopping in Mars.cpp"
        #        "PAT/A1089 Insert or Merge.cpp"
        #        "PAT/A1029 Median.cpp"
        #        "PAT/A1093 Count PAT's.cpp"
        #        "PAT/A1101 Quick Sort.cpp"
        #        "PAT/A1069 The Black Hole of Numbers.cpp"
        #        "PAT/A1104 Sum of Number Segments.cpp"
        #        AlgNote/MathProblemLearning.cpp
        #        "PAT/A1059 Prime Factors.cpp"
        #        "PAT/A1081 Rational Sum.cpp"
        #        "PAT/A1088 Rational Arithmetic.cpp"
        #        "PAT/A1015 Reversible Primes.cpp"
        #        "PAT/A1078 Hashing.cpp"
        #        "PAT/A1096 Consecutive Factors.cpp"
        #        "PAT/A1023 Have Fun with Numbers.cpp"
        #        AlgNote/BigNumberLearning.cpp
        #        "PAT/A1024 Palindromic Number.cpp"
        #        "PAT/A1039 Course List for Student.cpp"
        #        "PAT/A1047 Student List for Course.cpp"
        #        "PAT/A1063 Set Similarity.cpp"
        #        "PAT/A1100 Mars Numbers.cpp"
        #        "PAT/A1054 The Dominant Color.cpp"
        #        "PAT/1071 Speech Patterns.cpp"
        #        "PAT/A1022 Digital Library.cpp"
        #        "PAT/A1051 Pop Sequence.cpp"
        #        "PAT/A1056 Mice and Rice.cpp"
        #        "PAT/A1074 Reversing Linked List.cpp"
        #        "PAT/A1074 Reversing Linked List with Dynamic Nodelist.cpp"
        #        "PAT/A1032 Sharing.cpp"
        #        "PAT/A1052 Linked List Sorting.cpp"
        #        "PAT/A1097 Deduplication on a Linked List.cpp"
        #        "PAT/A1020 Tree Traversals.cpp"
        #        "PAT/A1086 Tree Traversals Again.cpp"
        #        "PAT/A1102 Invert a Binary Tree.cpp"
        #        "PAT/A1079 Total Sales of Supply Chain.cpp"
        #        "PAT/A1090 Highest Price in Supply Chain.cpp"
        #        "PAT/A1094 The Largest Generation.cpp"
        #        "PAT/A1106 Lowest Price in Supply Chain.cpp"
        #        "PAT/A1004 Counting Leaves.cpp"
        #        "PAT/A1053 Path of Equal Weight.cpp"
        #        ↑ 这个样例最后一个死活过不去。。。。我试了多种方法依然不知道。。。咋办啊。
        #        "PAT/A1043 Is It a Binary Search Tree.cpp"
        #        "PAT/A1064 Complete Binary Search Tree.cpp"
        #        "PAT/A1099 Build A Binary Search Tree.cpp"
        #        AlgNote/AVLTreeLearning.cpp
        #        "PAT/A1066 Root of AVL Tree.cpp"
        #        AlgNote/SortMethodLearning.cpp
        #        "PAT/A1013 Battle Over Cities.cpp"
        #        "PAT/A1021 Deepest Root.cpp"
        #        "PAT/A1008 Elevator.cpp"
        #        "PAT/A1034 Head of a Gang.cpp"
        #        "PAT/A1076 Forwards on Weibo.cpp"
        #        "PAT/A1037 Magic Coupon.cpp"
        #        "PAT/A1049 Counting Ones.cpp"
        #        "PAT/A1091 Acute Stroke.cpp"
        #        "PAT/A1017 Queueing at Bank.cpp"
        #        AlgNote/CtimeLearning.cpp
        #        "PAT/A1103 Integer Factorization.cpp"
        #        AlgNote/DynamicProgrammingLearning.cpp
        #        "PAT/A1007 Maximum Subsequence Sum .cpp"
        #        "PAT/A1045 Favorite Color Stripe LIS.cpp"
        #        "PAT/A1045 Favorite Color Stripe LCS.cpp"
        #        "PAT/A1040 Longest Symmetric String.cpp"
        #        "PAT/A1068 Find More Coins .cpp"
        #        "PAT/A1068 Find More Coins.cpp"
        #        "PAT/A1057 Stack.cpp"
        #                "PAT/A1107 Social Clusters.cpp"
        #        AlgNote/UnionFindSetLearning.cpp
        #        "PAT/A1108 Finding Average .cpp"
        #        "PAT/A1109 Group Photo.cpp"
        #        "PAT/A1110 Complete Binary Tree.cpp"
        #        "PAT/A1111 Online Map.cpp"
        #        "PAT/A1112 Stucked Keyboard.cpp"
        #        "PAT/A1072 Gas Station.cpp"
        #        "PAT/A1113 Integer Set Partition.cpp"
        #        "PAT/A1114 Family Property.cpp"
        #        "PAT/A1115 Counting Nodes in a BST.cpp"
        #        "PAT/A1116 Come on! Let's C.cpp"
        #        "PAT/A1117 Eddington Number.cpp"
        #        "PAT/A1118 Birds in Forest.cpp"
        #        "PAT/A1119 Pre- and Post-order Traversals.cpp" # TODO
        #        "PAT/A1120 Friend Numbers.cpp"
        #        "PAT/A1121 Damn Single.cpp"
        #        "PAT/A1122 Hamiltonian Cycle.cpp"
        #        "PAT/A1123 Is It a Complete AVL Tree.cpp"
        #        "PAT/A1124 Raffle for Weibo Followers.cpp"
        #        "PAT/A1125 Chain the Ropes .cpp"
        #        "PAT/A1126 Eulerian Path.cpp"
        #        "PAT/A1127 ZigZagging on a Tree.cpp"
        #        "PAT/A1128 N Queens Puzzle.cpp"
        #        "PAT/A1129 Recommendation System.cpp"
        #        "PAT/A1130 Infix Expression.cpp"
        #        "PAT/1131 Subway Map.cpp"
        #        ↑↑  测试点3爆了。不知道咋办
        #        "PAT/A1132 Cut Integer .cpp"
        #        "PAT/A1133 Splitting A Linked List.cpp"
        #        "PAT/A1134 Vertex Cover.cpp"
        #        AlgNote/RBTreeLearning.cpp
        #        "PAT/A1135 Is It A Red-Black Tree.cpp"
        #        "PAT/A1136 A Delayed Palindrome.cpp"
        #        "PAT/A1137 Final Grading.cpp"
        #        "PAT/A1138 Postorder Traversal.cpp"
        #        "PAT/A1139 First Contact.cpp"
        #        "PAT/A1140 Look-and-say Sequence.cpp"
        #        "PAT/A1141 PAT Ranking of Institutions.cpp"
        #        "PAT/1142 Maximal Clique.cpp"
        #        "PAT/A1143 Lowest Common Ancestor.cpp"
        #        "PAT/A1144 The Missing Number.cpp"
        #                "PAT/A1145 Hashing - Average Search Time.cpp"
        #        "PAT/A1146 Topological Order.cpp"
        #        "PAT/A1147 Heaps.cpp"
        #        "PAT/A1148 Werewolf - Simple Version.cpp"
        #        "PAT/A1149 Dangerous Goods Packaging.cpp"
        #        "PAT/A1150 Travelling Salesman Problem.cpp"
        #        "PAT/A1151 LCA in a Binary Tree.cpp"
        #        "PAT/A1152 Google Recruitment.cpp"
        "PAT/A1153 Decode Registration Card of PAT.cpp")
